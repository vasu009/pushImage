version: 2.1

jobs:
  test:
    working_directory: ~/circleci-python
    docker:
      - image: "python:latest"
    steps:
      - checkout
      - run: python3 basi-add.py

  build:
    working_directory: ~/circleci-python
    docker:
      - image: ubuntu:hirsute-20211208
    steps:
      - checkout
      - run: 
          name: install docker
          command: |
            apt update -y
            apt install curl -y
            apt install sudo -y

      - run: 
          name: Docker Run
          command: |
            apt-get -y install \
            ca-certificates \
            curl \
            gnupg \
            lsb-release
      - run: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
      - run: 
          name: Docker next
          command: |
            echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable nightly" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      - run: 
          name: Docker last
          command: |
            sudo apt-get update
            sudo apt-get install docker-ce docker-ce-cli containerd.io
            apt-cache madison docker-ce
            sudo apt-get install docker-ce=<VERSION_STRING> docker-ce-cli=<VERSION_STRING> containerd.io

        
# sudo service docker status
# docker run --ulimit nofile=32768:32768 --rm debian sh -c "ulimit -n" 32768

      - run: 
          name: Build image
          command: |
            docker build -t first_build .   
            echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
            docker context ls
            docker build -t first_build .          
      
#start it

workflows:
  build_and_test:
    jobs:
      - test
      - build:
          requires:
            - test
